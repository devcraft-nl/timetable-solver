name: GraalVM Native Image builds
on:
  push:
    branches: [ main, deploy ]
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  build:
    name: Build timetable-solver lambda function
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and run timetable-solver
        run: |
              ./mvnw package -Pnative
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: timetable-solver-function
          path: target/function.zip
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Deploy function to aws
        if: ${{ github.ref == 'ref/heads/deploy' }}
        run: ./update.sh
